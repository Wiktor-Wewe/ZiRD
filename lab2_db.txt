CREATE TABLE REGIONS AS SELECT * FROM HR.REGIONS;

CREATE TABLE COUNTRIES AS SELECT * FROM HR.COUNTRIES;

CREATE TABLE LOCATIONS AS SELECT * FROM HR.LOCATIONS;

CREATE TABLE DEPARTMENTS AS SELECT * FROM HR.DEPARTMENTS;

CREATE TABLE JOBS AS SELECT * FROM HR.JOBS;

CREATE TABLE EMPLOYEES AS SELECT * FROM HR.EMPLOYEES;

CREATE TABLE JOB_HISTORY AS SELECT * FROM HR.JOB_HISTORY;

CREATE TABLE JOB_GRADES AS SELECT * FROM HR.JOB_GRADES;

ALTER TABLE REGIONS ADD CONSTRAINT PK_REGIONS PRIMARY KEY(REGION_ID)

ALTER TABLE COUNTRIES ADD CONSTRAINT PK_COUNTRIES PRIMARY KEY(COUNTRY_ID)

ALTER TABLE LOCATIONS ADD CONSTRAINT PK_LOCATIONS PRIMARY KEY(LOCATION_ID)

ALTER TABLE EMPLOYEES ADD CONSTRAINT PK_EMPLOYEES PRIMARY KEY(EMPLOYEE_ID)

ALTER TABLE DEPARTMENTS ADD CONSTRAINT PK_DEPARTMENTS PRIMARY KEY(DEPARTMENT_ID)

ALTER TABLE JOB_HISTORY ADD CONSTRAINT PK_JOB_HISTORY PRIMARY KEY(EMPLOYEE_ID, START_DATE)

ALTER TABLE JOBS ADD CONSTRAINT PK_JOBS PRIMARY KEY(JOB_ID)

ALTER TABLE JOB_GRADES ADD CONSTRAINT PK_JOB_GRADES PRIMARY KEY(GRADE)

ALTER TABLE COUNTRIES ADD FOREIGN KEY (region_id) REFERENCES REGIONS(region_id)

ALTER TABLE LOCATIONS ADD FOREIGN KEY (country_id) REFERENCES COUNTRIES(country_id)

ALTER TABLE DEPARTMENTS ADD FOREIGN KEY (location_id) REFERENCES LOCATIONS(location_id)

ALTER TABLE EMPLOYEES ADD FOREIGN KEY (job_id) REFERENCES JOBS(job_id)

ALTER TABLE EMPLOYEES ADD FOREIGN KEY (department_id) REFERENCES DEPARTMENTS(department_id)

ALTER TABLE EMPLOYEES ADD FOREIGN KEY (manager_id) REFERENCES EMPLOYEES(employee_id)

ALTER TABLE JOB_HISTORY ADD FOREIGN KEY (employee_id) REFERENCES EMPLOYEES(employee_id)

ALTER TABLE JOB_HISTORY ADD FOREIGN KEY (job_id) REFERENCES JOBS(job_id)

ALTER TABLE JOB_HISTORY ADD FOREIGN KEY (department_id) REFERENCES DEPARTMENTS(department_id)

1)
SELECT EMPLOYEES.LAST_NAME, CONCAT(EMPLOYEES.LAST_NAME, EMPLOYEES.SALARY) AS Wynagrodzenie 
FROM EMPLOYEES
WHERE EMPLOYEES.DEPARTMENT_ID = 20 OR EMPLOYEES.DEPARTMENT_ID = 50 and EMPLOYEES.SALARY BETWEEN 2000 AND 7000
ORDER BY EMPLOYEES.LAST_NAME 

2)
SELECT JOB_HISTORY.START_DATE, EMPLOYEES.LAST_NAME, :KOLUMNA
FROM EMPLOYEES
JOIN JOB_HISTORY ON JOB_HISTORY.EMPLOYEE_ID = EMPLOYEES.EMPLOYEE_ID 
WHERE EMPLOYEES.MANAGER_ID IS NOT NULL 
AND EXTRACT(YEAR FROM JOB_HISTORY.START_DATE) = 2005
ORDER BY :KOLUMNA

3)
SELECT CONCAT(CONCAT(FIRST_NAME, ' '), LAST_NAME) AS FULL_NAME, SALARY, PHONE_NUMBER
FROM EMPLOYEES
WHERE (LAST_NAME LIKE '__%e%') AND (FIRST_NAME LIKE :input)
ORDER BY FULL_NAME DESC, SALARY ASC

4)
SELECT FIRST_NAME, LAST_NAME, MONTHS_BETWEEN(MAX(JOB_HISTORY.END_DATE), MIN(JOB_HISTORY.START_DATE)) AS NUMBER_OF_MONTHS,
CASE WHEN MONTHS_BETWEEN(MAX(JOB_HISTORY.END_DATE), MIN(JOB_HISTORY.START_DATE)) <= 150 THEN SALARY * 0.10
WHEN MONTHS_BETWEEN(MAX(JOB_HISTORY.END_DATE), MIN(JOB_HISTORY.START_DATE)) BETWEEN 151 AND 200 THEN SALARY * 0.20
ELSE SALARY * 0.30
END AS BONUS
FROM EMPLOYEES
JOIN JOB_HISTORY ON EMPLOYEES.EMPLOYEE_ID = JOB_HISTORY.EMPLOYEE_ID
GROUP BY EMPLOYEES.FIRST_NAME, EMPLOYEES.LAST_NAME, EMPLOYEES.SALARY
ORDER BY NUMBER_OF_MONTHS;

5)
SELECT DEPARTMENTS.DEPARTMENT_NAME, round(SUM(EMPLOYEES.SALARY)) AS suma, round(AVG(EMPLOYEES.SALARY)) AS srednia 
FROM JOBS
JOIN EMPLOYEES ON JOBS.JOB_ID = JOBS.JOB_ID
JOIN DEPARTMENTS ON DEPARTMENTS.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID 
WHERE JOBS.MIN_SALARY > 5000
GROUP BY DEPARTMENTS.DEPARTMENT_NAME;

6)
SELECT EMPLOYEES.LAST_NAME, EMPLOYEES.DEPARTMENT_ID, EMPLOYEES.JOB_ID 
FROM EMPLOYEES
JOIN DEPARTMENTS ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID
JOIN LOCATIONS ON LOCATIONS.LOCATION_ID = DEPARTMENTS.LOCATION_ID
WHERE LOCATIONS.CITY = 'Toronto'
GROUP BY EMPLOYEES.LAST_NAME, EMPLOYEES.DEPARTMENT_ID, EMPLOYEES.JOB_ID;

7)
SELECT e.FIRST_NAME, e.LAST_NAME, c.FIRST_NAME, c.LAST_NAME FROM EMPLOYEES e
JOIN EMPLOYEES c ON c.MANAGER_ID = e.MANAGER_ID
WHERE e.FIRST_NAME = 'Jennifer' AND e.EMPLOYEE_ID != c.EMPLOYEE_ID
GROUP BY e.FIRST_NAME, e.LAST_NAME, c.FIRST_NAME, c.LAST_NAME;

8)
SELECT DEPARTMENTS.DEPARTMENT_ID, DEPARTMENTS.DEPARTMENT_NAME 
FROM EMPLOYEES
RIGHT JOIN DEPARTMENTS ON DEPARTMENTS.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID
GROUP BY DEPARTMENTS.DEPARTMENT_ID, DEPARTMENTS.DEPARTMENT_NAME
HAVING COUNT(EMPLOYEE_ID) = 0;

9)
SELECT EMPLOYEES.FIRST_NAME, EMPLOYEES.LAST_NAME, EMPLOYEES.JOB_ID, DEPARTMENTS.DEPARTMENT_NAME, EMPLOYEES.SALARY, JOB_GRADES.GRADE
FROM EMPLOYEES
JOIN DEPARTMENTS ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID
JOIN JOB_GRADES ON EMPLOYEES.SALARY BETWEEN JOB_GRADES.MIN_SALARY AND JOB_GRADES.MAX_SALARY
ORDER BY JOB_GRADES.GRADE;

10)
SELECT FIRST_NAME, LAST_NAME, SALARY 
FROM EMPLOYEES
WHERE SALARY > (SELECT AVG(SALARY) FROM EMPLOYEES)
GROUP BY FIRST_NAME, LAST_NAME, SALARY
ORDER BY SALARY DESC;

11)
SELECT EMPLOYEES.EMPLOYEE_ID, EMPLOYEES.FIRST_NAME, EMPLOYEES.LAST_NAME, c.LAST_NAME 
FROM EMPLOYEES
JOIN EMPLOYEES c ON EMPLOYEES.MANAGER_ID = c.MANAGER_ID
WHERE (c.LAST_NAME LIKE '%u%') AND (EMPLOYEES.DEPARTMENT_ID = c.DEPARTMENT_ID) AND (EMPLOYEES.EMPLOYEE_ID  != c.EMPLOYEE_ID);